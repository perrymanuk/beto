# radbot Environment Configuration

# Google API Configuration
# -----------------------
# Comment/uncomment the appropriate section based on your authentication method

# For Google AI Studio (Gemini API key)
GOOGLE_GENAI_USE_VERTEXAI=FALSE
GOOGLE_API_KEY=your_gemini_api_key_here

# For Vertex AI
# GOOGLE_GENAI_USE_VERTEXAI=TRUE
# GOOGLE_CLOUD_PROJECT=your-gcp-project-id
# GOOGLE_CLOUD_LOCATION=us-central1

# Model Configuration
# ------------------
# Options: "gemini-2.5-pro", "gemini-2.0-flash"
GEMINI_MODEL=gemini-2.5-pro

# Qdrant Configuration
# -------------------
# Required for memory features. Uncomment appropriate section based on your Qdrant deployment

# For local Qdrant (Docker/local installation)
QDRANT_HOST=localhost
QDRANT_PORT=6333
# Collection name for storing memories (default: "radbot_memories")
QDRANT_COLLECTION=radbot_memories
# Vector size based on embedding model (default: 768 for sentence-transformers, 768/1408 for Gemini)
QDRANT_VECTOR_SIZE=768
# Embedding model (default: "all-MiniLM-L6-v2" or "google/gemini-1.5-flash" if GOOGLE_API_KEY is set)
EMBEDDING_MODEL=all-MiniLM-L6-v2

# For homelab Qdrant server
# QDRANT_URL=http://qdrant.service.consul:6333
# QDRANT_COLLECTION=radbot_memories

# For Qdrant Cloud
# QDRANT_URL=https://your-cluster-url.qdrant.io
# QDRANT_API_KEY=your-qdrant-api-key
# QDRANT_COLLECTION=radbot_memories

# Home Assistant Integration Configuration
# ------------------------------------
# Home Assistant integration using REST API

# REST API Configuration 
# Uncomment and set these to enable Home Assistant integration
# HA_URL=http://your-home-assistant:8123
# HA_TOKEN=your_long_lived_access_token

# MCP Fileserver Configuration
# ---------------------------
# Root directory for filesystem operations
MCP_FS_ROOT_DIR=/path/to/root/directory
# Allow write operations (default: false)
MCP_FS_ALLOW_WRITE=false
# Allow delete operations (default: false)
MCP_FS_ALLOW_DELETE=false

# OpenWeatherMap API Configuration
# ------------------------------
# Get your API key from https://openweathermap.org/api
# OPENWEATHER_API_KEY=your_openweathermap_api_key

# Tavily API Configuration
# -----------------------
# Get your API key from https://tavily.com/
# TAVILY_API_KEY=your_tavily_api_key

# Shell Command Execution Configuration
# -----------------------------------
# Enable modes: "strict" (allow-listed commands only), "all" (any command, SECURITY RISK), or empty to disable
RADBOT_ENABLE_SHELL=strict
# Default timeout for command execution in seconds
RADBOT_SHELL_TIMEOUT=60

# Google Cloud Text-to-Speech Configuration
# ----------------------------------
# Set GOOGLE_APPLICATION_CREDENTIALS in your environment to point to your service account key file
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/your/service-account-key.json
# Language code for TTS (default: "en-US")
# GOOGLE_TTS_LANGUAGE_CODE=en-US
# Voice name to use (default: "en-US-Journey-F")
# GOOGLE_TTS_VOICE_NAME=en-US-Journey-F
# Audio encoding (default: "LINEAR16", options: "LINEAR16", "MP3", "OGG_OPUS")
# GOOGLE_TTS_AUDIO_ENCODING=LINEAR16
# Speaking rate, 1.0 is normal speed (default: 1.0, range: 0.25 to 4.0)
# GOOGLE_TTS_SPEAKING_RATE=1.0
# Voice pitch, 0.0 is normal pitch (default: 0.0, range: -20.0 to 20.0)
# GOOGLE_TTS_PITCH=0.0
# Volume gain in dB (default: 0.0, range: -96.0 to 16.0)
# GOOGLE_TTS_VOLUME_GAIN_DB=0.0

# Voice Server Configuration
# ------------------------
# Host and port for the voice server (default: localhost:8000)
# VOICE_SERVER_HOST=localhost
# VOICE_SERVER_PORT=8000

# PostgreSQL Configuration (for Todo Tool)
# --------------------------------
# Database connection parameters
POSTGRES_DB=radbot_todos
POSTGRES_USER=radbot_user
POSTGRES_PASSWORD=your_secure_password
POSTGRES_HOST=localhost
POSTGRES_PORT=5432

# Logging Configuration
# --------------------
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO