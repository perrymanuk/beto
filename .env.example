# RaderBot Environment Configuration

# Google API Configuration
# -----------------------
# Comment/uncomment the appropriate section based on your authentication method

# For Google AI Studio (Gemini API key)
GOOGLE_GENAI_USE_VERTEXAI=FALSE
GOOGLE_API_KEY=your_gemini_api_key_here

# For Vertex AI
# GOOGLE_GENAI_USE_VERTEXAI=TRUE
# GOOGLE_CLOUD_PROJECT=your-gcp-project-id
# GOOGLE_CLOUD_LOCATION=us-central1

# Model Configuration
# ------------------
# Options: "gemini-2.5-pro", "gemini-2.0-flash"
GEMINI_MODEL=gemini-2.5-pro

# Qdrant Configuration
# -------------------
# Required for memory features. Uncomment appropriate section based on your Qdrant deployment

# For local Qdrant (Docker/local installation)
QDRANT_HOST=localhost
QDRANT_PORT=6333
# Collection name for storing memories (default: "raderbot_memories")
QDRANT_COLLECTION=raderbot_memories
# Vector size based on embedding model (default: 768 for sentence-transformers, 768/1408 for Gemini)
QDRANT_VECTOR_SIZE=768
# Embedding model (default: "all-MiniLM-L6-v2" or "google/gemini-1.5-flash" if GOOGLE_API_KEY is set)
EMBEDDING_MODEL=all-MiniLM-L6-v2

# For homelab Qdrant server
# QDRANT_URL=http://qdrant.service.consul:6333
# QDRANT_COLLECTION=raderbot_memories

# For Qdrant Cloud
# QDRANT_URL=https://your-cluster-url.qdrant.io
# QDRANT_API_KEY=your-qdrant-api-key
# QDRANT_COLLECTION=raderbot_memories

# Home Assistant MCP Configuration
# ------------------------------
# Configuration for Home Assistant MCP integration
# HA_MCP_SSE_URL=http://your-home-assistant:8123/api/mcp_server/sse
# HA_AUTH_TOKEN=your_long_lived_access_token

# OpenWeatherMap API Configuration
# ------------------------------
# Get your API key from https://openweathermap.org/api
# OPENWEATHER_API_KEY=your_openweathermap_api_key

# Tavily API Configuration
# -----------------------
# Get your API key from https://tavily.com/
# TAVILY_API_KEY=your_tavily_api_key

# Logging Configuration
# --------------------
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO